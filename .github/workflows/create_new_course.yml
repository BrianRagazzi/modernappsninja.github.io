name: create new course workfow
on:
  workflow_dispatch:
    inputs:
      course_title:
        description: 'Course Title'
        required: true
        default: 'The title of your course'
      course_short_title:
        description: 'Course Short Title - up to 26 chars, no spaces, chars must be valid to use in URL'
        required: true
        default: 'courseshortname'
      code_stub:
        description: 'Enter Two Uppercase Letters of your choice, no special chars. This will be prepended to a random number to create your content ID'
        required: true
        default: 'AB'
      course_description:
        description: 'One line Course Description'
        required: true
        default: 'The title of your course'
      course_tags:
        description: 'Enter tags as an array including brackets, example: ["tag1","tag2"]'
        required: true
        default: 'The title of your course'
      course_duration:
        description: 'Enter approximate number of hours to complete the course, whole numbers only'
        required: true
        default: '3'
jobs:
  create_new_course:
    name: create new course job
    runs-on: ubuntu-latest
    if: env. == 'false'
    steps:
      - name: cat payload file
        run: cat /home/runner/work/_temp/_github_workflow/event.json
      - name: initialize git
        run: |
          git config --global user.name modernappsninjabot
          git config --global user.email modernappsninjabot@gmail.com
          git init
      - name: set repository name for source template to be copied as source_repo_name
        run: |
          echo source_repo_name="vSphereTanzu101_VT7933" >> $GITHUB_ENV
          echo ${{ env.source_repo_name }}
      - name: curl member record file
        run: |
          curl -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          "https://raw.githubusercontent.com/modernappsninja/admin-private/main/userdata/members/${{ github.event.sender.login }}_${{ github.event.sender.id }}.json" \
          -o /tmp/member_record.json
      - name: clone ninja_course_template
        run: |
          git clone https://${{ secrets.NINJABOTGURU }}:x-oauth-basic@github.com/modernappsninja/${{ env.source_repo_name }}.git
      - name: create hub config file
        run: |
          echo "---" > ~/.config/hub
          echo "github.com: " >> ~/.config/hub
          echo "- oauth_token: ${{ secrets.NINJABOTGURU }}" >> ~/.config/hub
          echo "  user: modernappsninjabot" >> ~/.config/hub
          cat ~/.config/hub
      - name: extract firstName from member_record and set as first_name
        run: |
          echo $(echo first_name=$(echo $(cat /tmp/member_record.json | jq '.firstName' | sed 's/"//g' ))) >> $GITHUB_ENV
          echo $first_name
      - name: extract lastName from member_record and set as last_name
        run: |
          echo $(echo last_name=$(echo $(cat /tmp/member_record.json | jq '.lastName' | sed 's/"//g' ))) >> $GITHUB_ENV
          echo $last_name
      - name: envsubst config.toml file
        run: |
          cd ${{ env.source_repo_name }}
          envsubst <"config.toml" > config.toml.tmp
          mv -f config.toml.tmp config.toml
          cat config.toml
      - name: envsubst homepage.yml file
        run: |
          cd member_repo_template
          envsubst <"data/en/homepage.yml" > /tmp/homepage.yml.tmp
          mv -f /tmp/homepage.yml.tmp data/en/homepage.yml
          cat data/en/homepage.yml
      - name: envsubst git config file
        run: |
          cd member_repo_template
          envsubst <"static/admin/git_config_template.txt" > /tmp/git_config
          mv -f /tmp/git_config .git/config
          cat .git/config
      - name: create new member repository
        run: |
          curl -X POST \
          -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          -d '{"name":"${{ github.event.client_payload.member_login }}"}' \
          "https://api.github.com/orgs/modernappsninja/repos" \
          -o /tmp/member_repo_create_curl_response.json
          cat /tmp/member_repo_create_curl_response.json
      - name: prep local directory for new member repo content
        run: |
          cp -R member_repo_template ${{ github.event.client_payload.member_login }}
          cd ${{ github.event.client_payload.member_login }}
          sudo rm -r .git/
          git init
          git add .
          git commit -m "initial setup for ${{ github.event.client_payload.member_login }} member repo"
          git branch -M main
          git remote add origin https://${{ secrets.NINJABOTGURU }}:x-oauth-basic@github.com/modernappsninjas/${{ github.event.client_payload.member_login }}.git
          git push -u origin main
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true
      - name: initial hugo build
        run: |
          cd ${{ github.event.client_payload.member_login }}
          echo "public" >> .gitignore
          git checkout --orphan gh-pages
          git reset --hard
          git commit --allow-empty -m "Initializing gh-pages branch"
          git push origin gh-pages
          git checkout main
          sudo rm -rf public
          git worktree add -B gh-pages public origin/gh-pages
          hugo --minify
          cd public
          git add --all
          git commit -m "Publishing to gh-pages"
          cd ..
          git push origin gh-pages
      - name: enable github pages for new member repo
        run: |
          curl -X POST \
          -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          -H "Accept: application/vnd.github.switcheroo-preview+json" \
          -d '{"source":{"branch":"gh-pages","path":"/"}}' \
          "https://api.github.com/repos/modernappsninjas/${{ github.event.client_payload.member_login }}/pages" \
          -o /tmp/member_repo_enable_pages_response.json
          cat /tmp/member_repo_enable_pages_response.json